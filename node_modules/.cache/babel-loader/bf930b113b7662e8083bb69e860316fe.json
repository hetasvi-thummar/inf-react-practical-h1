{"ast":null,"code":"import axios from \"axios\";\nimport { Config } from \"../../common\";\nconst jwt = localStorage.getItem(\"jwt\");\nexport const carListData = page => {\n  return dispatch => {\n    dispatch({\n      type: \"CARLIST_DATA_PENDING\"\n    });\n    axios.get(`${Config.apiUrl}/test/carListing?recordsPerPage=5&page=${page}`, {\n      headers: {\n        Authorization: `Bearer ${jwt}`\n      }\n    }).then(res => {\n      dispatch({\n        type: \"CARLIST_DATA_SUCCESS\",\n        cars: res.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"CARLIST_DATA_FAILURE\",\n        message: error.message\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/var/www/html/working folder/inf-react-practical-h1/src/redux/actions/CarListAction.js"],"names":["axios","Config","jwt","localStorage","getItem","carListData","page","dispatch","type","get","apiUrl","headers","Authorization","then","res","cars","data","catch","error","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAR,IAAAA,KAAK,CACFS,GADH,CACQ,GAAER,MAAM,CAACS,MAAO,0CAAyCJ,IAAK,EADtE,EACyE;AACrEK,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASV,GAAI;AADtB;AAD4D,KADzE,EAOGW,IAPH,CAOSC,GAAD,IAAS;AACbP,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,sBADC;AAEPO,QAAAA,IAAI,EAAED,GAAG,CAACE;AAFH,OAAD,CAAR;AAID,KAZH,EAcGC,KAdH,CAcUC,KAAD,IAAW;AAChBX,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,sBADC;AAEPW,QAAAA,OAAO,EAAED,KAAK,CAACC;AAFR,OAAD,CAAR;AAID,KAnBH;AAoBD,GAtBD;AAuBD,CAxBM","sourcesContent":["import axios from \"axios\";\nimport { Config } from \"../../common\";\n\nconst jwt = localStorage.getItem(\"jwt\");\nexport const carListData = (page) => {\n  return (dispatch) => {\n    dispatch({ type: \"CARLIST_DATA_PENDING\" });\n    axios\n      .get(`${Config.apiUrl}/test/carListing?recordsPerPage=5&page=${page}`, {\n        headers: {\n          Authorization: `Bearer ${jwt}`,\n        },\n      })\n\n      .then((res) => {\n        dispatch({\n          type: \"CARLIST_DATA_SUCCESS\",\n          cars: res.data,\n        });\n      })\n\n      .catch((error) => {\n        dispatch({\n          type: \"CARLIST_DATA_FAILURE\",\n          message: error.message,\n        });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}